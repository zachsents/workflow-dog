events {
    worker_connections 1024;
}

http {
    include mime.types;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80 default_server;
        server_name workflow.dog www.workflow.dog;
        root /www/home;

        location @webapp {
            proxy_pass http://webapp:3000;
        }

        location / {
            try_files $uri $uri/ $uri.html @webapp;
        }

        # video files -- made by chatgpt
        location ~* \.(mp4|webm|ogg)$ {
            # Enable sending partial content (byte-range requests)
            add_header Accept-Ranges bytes;
            # Enable caching for better performance
            expires 7d;
            access_log off;
            # Optional: Serve video files directly if necessary
            try_files $uri =404;
        }

        location /health {
            access_log off;
            error_log /dev/stderr error;
            return 200 'healthy\n';
        }

        location = /feedback {
            return 302 'https://forms.gle/SwmPPmUg45LnJ2nx7';
        }

        location /api/ws {
            proxy_pass http://realtime:8002;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }
    }

    # server {
    #     listen 80;
    #     server_name admin.workflow.dog www.admin.workflow.dog;

    #     location / {
    #         auth_basic "WorkflowDog Admin";
    #         auth_basic_user_file /etc/nginx/.htpasswd;
    #         proxy_pass http://studio:3001;
    #     }
    # }
}

stream {
    server {
        listen 5432;
        proxy_pass postgres;
    }

    upstream postgres {
        server db:5432;
    }
}